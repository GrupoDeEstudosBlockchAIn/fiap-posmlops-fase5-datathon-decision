name: CI/CD - Decision AI Backend

on:
  push:
    branches: [develop, staging, master]
  pull_request:
    branches: [develop, staging, master]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build da imagem Docker do backend
        run: |
          docker build -t decision-backend -f backend/Dockerfile .

      - name: Salvar imagem Docker
        run: |
          docker save decision-backend | gzip > decision-backend.tar.gz

      - name: Upload do artefato Docker
        uses: actions/upload-artifact@v4
        with:
          name: decision-backend-image
          path: decision-backend.tar.gz

  test:
    name: Testar API no container
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Baixar imagem Docker
        uses: actions/download-artifact@v4
        with:
          name: decision-backend-image

      - name: Load imagem Docker
        run: |
          gunzip -c decision-backend.tar.gz | docker load

      - name: Subir container da API e aguardar readiness
        run: |
          docker run -d -p 8000:8000 --name decision_container decision-backend
          echo "⏳ Aguardando a API iniciar..."
          for i in {1..10}; do
            if curl -s http://localhost:8000/docs > /dev/null; then
              echo "✅ API está no ar!"
              break
            fi
            echo "Tentativa $i: aguardando..."
            sleep 3
          done
          docker logs decision_container

      - name: Testar endpoint /match
        run: |
          curl -X POST http://localhost:8000/match \
            -H "Content-Type: application/json" \
            -d '{"id_vaga": "5185", "nome": "Fulano", "cv": "Python, SQL e Machine Learning", "nivel_ingles": "Avançado", "area_atuacao": "TI"}'

      - name: Testar endpoint /rank
        run: |
          curl -X POST http://localhost:8000/rank \
            -H "Content-Type: application/json" \
            -d '{
              "id_vaga": "5185",
              "candidatos": [
                {"nome": "C1", "cv": "Python e APIs", "nivel_ingles": "Avançado", "area_atuacao": "TI"},
                {"nome": "C2", "cv": "Java e Spring", "nivel_ingles": "Intermediário", "area_atuacao": "TI"}
              ]
            }'

  package:
    name: Empacotar Projeto
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Empacotar backend para entrega
        run: |
          tar -czf decision-backend.tar.gz \
            backend/app/ \
            backend/data/ \
            backend/models/ \
            backend/tests/ \
            backend/Dockerfile \
            requirements.txt \
            README.md

      - name: Upload do pacote empacotado
        uses: actions/upload-artifact@v4
        with:
          name: decision-backend-package
          path: decision-backend.tar.gz

  deploy:
    name: Deploy (Simulado)
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Baixar pacote da aplicação
        uses: actions/download-artifact@v4
        with:
          name: decision-backend-package

      - name: Simular deploy
        run: |
          echo ">>> Iniciando deploy da aplicação..."
          tar -xzf decision-backend.tar.gz
          echo ">>> Deploy concluído com sucesso (simulado)."
