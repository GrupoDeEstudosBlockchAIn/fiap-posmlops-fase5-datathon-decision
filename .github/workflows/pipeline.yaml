name: CI/CD - Deep Learning com Docker

on:
  push:
    branches: [develop, staging, master]
  pull_request:
    branches: [develop, staging, master]

jobs:
  build:
    name: ðŸ”§ Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir imagem Docker do projeto
        run: |
          docker build -t deeplearning-app .

      - name: Salvar imagem Docker para reutilizaÃ§Ã£o
        run: docker save deeplearning-app | gzip > deeplearning-app.tar.gz

      - name: Upload da imagem Docker como artefato
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: deeplearning-app.tar.gz

  test:
    name: âœ… Testar API no container
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Baixar imagem Docker
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          gunzip -c deeplearning-app.tar.gz | docker load

      - name: Rodar container com a API
        run: |
          docker run -d -p 8000:8000 --name dl_container deeplearning-app
          sleep 10
          echo "Logs do container:"
          docker logs dl_container

      - name: Verificar se a API responde
        run: |
          curl --fail http://localhost:8000

      - name: Testar endpoint /predict
        run: |
          curl -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"prices": [100]*60}'

  package:
    name: ðŸ“¦ Empacotar aplicaÃ§Ã£o
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v3

      - name: Empacotar aplicaÃ§Ã£o (controlado)
        run: |
          tar -czf fiap-posmlops-fase4.tar.gz \
            src/ \
            models/ \
            data/ \
            metrics/ \
            requirements.txt \
            Dockerfile \
            main.py \
            README.md \
            Documentacao_DeepLearning_Previsao_Precos.pdf

      - name: Upload do artefato empacotado
        uses: actions/upload-artifact@v4
        with:
          name: projeto-deep-learning
          path: fiap-posmlops-fase4.tar.gz

  deploy:
    name: ðŸš€ Deploy (Simulado)
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Download do pacote da aplicaÃ§Ã£o
        uses: actions/download-artifact@v4
        with:
          name: projeto-deep-learning

      - name: Simular deploy
        run: |
          echo "Iniciando deploy da aplicaÃ§Ã£o..."
          echo "Descompactando pacote:"
          tar -xzf fiap-posmlops-fase4.tar.gz
          echo ">>> Deploy finalizado com sucesso (simulado)!"
